[{"C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\index.tsx":"1","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\reportWebVitals.ts":"2","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\App.tsx":"3","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\styled\\GlobalStyle.ts":"4","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\components\\Routes\\index.tsx":"5","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\components\\Theme\\index.tsx":"6","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\components\\Theme\\theme.ts":"7","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\components\\Theme\\mediaQueries.ts":"8","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\components\\Navbar\\index.tsx":"9","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\pages\\Home\\index.tsx":"10","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\components\\Navbar\\styled.ts":"11","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\styled\\Button.ts":"12","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\importFontAwesome.ts":"13","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\hooks\\useStores\\index.ts":"14","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\stores\\RootStore\\index.ts":"15","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\stores\\AuthStore\\index.ts":"16","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\stores\\NotificationStore\\index.ts":"17","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\components\\Sidebar\\index.tsx":"18","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\components\\Sidebar\\styled.ts":"19","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\components\\Portal\\index.tsx":"20","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\hooks\\usePortal\\usePortal.tsx":"21"},{"size":479,"mtime":1607679589437,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1607665045550,"results":"24","hashOfConfig":"23"},{"size":522,"mtime":1607687898950,"results":"25","hashOfConfig":"23"},{"size":659,"mtime":1607679379794,"results":"26","hashOfConfig":"23"},{"size":368,"mtime":1607680179157,"results":"27","hashOfConfig":"23"},{"size":479,"mtime":1607687816476,"results":"28","hashOfConfig":"23"},{"size":574,"mtime":1607777149215,"results":"29","hashOfConfig":"23"},{"size":159,"mtime":1607665510951,"results":"30","hashOfConfig":"23"},{"size":1907,"mtime":1607778703450,"results":"31","hashOfConfig":"23"},{"size":130,"mtime":1607678427936,"results":"32","hashOfConfig":"23"},{"size":1537,"mtime":1607778578076,"results":"33","hashOfConfig":"23"},{"size":1084,"mtime":1607700114794,"results":"34","hashOfConfig":"23"},{"size":161,"mtime":1607687860387,"results":"35","hashOfConfig":"23"},{"size":173,"mtime":1607701091424,"results":"36","hashOfConfig":"23"},{"size":622,"mtime":1607700442421,"results":"37","hashOfConfig":"23"},{"size":907,"mtime":1607700306900,"results":"38","hashOfConfig":"23"},{"size":795,"mtime":1607700390638,"results":"39","hashOfConfig":"23"},{"size":1313,"mtime":1607779377876,"results":"40","hashOfConfig":"23"},{"size":1475,"mtime":1607778215740,"results":"41","hashOfConfig":"23"},{"size":393,"mtime":1607764699773,"results":"42","hashOfConfig":"23"},{"size":1371,"mtime":1607764722633,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"ahf1nt",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"46"},"C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\index.tsx",[],["98","99","100"],"C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\reportWebVitals.ts",["101"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\App.tsx",["102"],"import React, { FC } from 'react';\nimport Theme from 'components/Theme';\nimport Routes from 'components/Routes/index';\nimport { Normalize } from 'styled-normalize';\nimport GlobalStyle from 'styled/GlobalStyle';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'importFontAwesome';\nconst App: FC = (): JSX.Element => {\n  return (\n    <>\n      <GlobalStyle />\n      <Normalize />\n      <Theme>\n        <BrowserRouter>\n          <Routes />\n        </BrowserRouter>\n      </Theme>\n    </>\n  );\n};\n\nexport default App;\n","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\styled\\GlobalStyle.ts",[],"C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\components\\Routes\\index.tsx",["103"],"import React, { FC } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Home from 'pages/Home';\r\nimport Navbar from 'components/Navbar';\r\nconst Routes: FC = (): JSX.Element => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\components\\Theme\\index.tsx",["104"],"import React, { FunctionComponent } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nimport theme, { buttonVariants } from './theme';\r\nimport mediaQueries from './mediaQueries';\r\n\r\ninterface ThemeProps {\r\n  children: JSX.Element;\r\n}\r\nconst Theme: FunctionComponent<ThemeProps> = ({ children }) => {\r\n  return (\r\n    <ThemeProvider theme={{ mediaQueries, ...theme, buttonVariants }}>\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Theme;\r\n","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\components\\Theme\\theme.ts",[],"C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\components\\Theme\\mediaQueries.ts",[],"C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\components\\Navbar\\index.tsx",["105"],"C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\pages\\Home\\index.tsx",["106"],"import React, { FC } from 'react';\r\nconst Home: FC = (): JSX.Element => {\r\n  return <div>Home</div>;\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\components\\Navbar\\styled.ts",[],"C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\styled\\Button.ts",["107","108"],"import { faThermometerHalf } from '@fortawesome/free-solid-svg-icons';\r\nimport styled from 'styled-components';\r\nimport { css } from 'styled-components';\r\n\r\nexport const Wrapper = styled('button')``;\r\n\r\ninterface ButtonProps {\r\n  buttonType?: 'primary' | 'light' | 'dark' | 'transparent';\r\n  color?: 'primary' | 'secondary' | 'white';\r\n  active?: Boolean;\r\n  size?: 'default' | 'small' | 'large';\r\n}\r\n\r\nexport const Button = styled('button')<ButtonProps>`\r\n  background: ${({ theme, buttonType }) =>\r\n    theme.buttonVariants[buttonType!].background};\r\n  color: ${({ theme, buttonType }) => theme.buttonVariants[buttonType!].color};\r\n  :hover {\r\n    background: ${({ theme, buttonType }) =>\r\n      theme.buttonVariants[buttonType!].active.background};\r\n    color: ${({ theme, buttonType }) =>\r\n      theme.buttonVariants[buttonType!].active.color};\r\n  }\r\n  border: none;\r\n  font-weight: bold;\r\n  padding: 1rem 2rem;\r\n  border-radius: 2px;\r\n`;\r\n\r\nexport default Button;\r\n\r\nButton.defaultProps = {\r\n  buttonType: 'primary',\r\n  size: 'default',\r\n  active: false,\r\n  color: 'white',\r\n};\r\n","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\importFontAwesome.ts",[],"C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\hooks\\useStores\\index.ts",[],"C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\stores\\RootStore\\index.ts",["109"],"import { createContext } from 'react';\r\nimport { observable, action } from 'mobx';\r\nimport { create } from 'mobx-persist';\r\nimport AuthStore from 'stores/AuthStore';\r\nimport NotificationStore from 'stores/NotificationStore';\r\n\r\nconst hydrate = create({\r\n  storage: localStorage,\r\n  jsonify: true,\r\n});\r\nexport class RootStore {\r\n  @observable public authStore = new AuthStore();\r\n\r\n  @observable public notificationStore = new NotificationStore();\r\n\r\n  public constructor() {\r\n    hydrate('authStore', this.authStore);\r\n  }\r\n}\r\n\r\nconst RootStoreContext = createContext(new RootStore());\r\nexport default RootStoreContext;\r\n","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\stores\\AuthStore\\index.ts",["110","111"],"import { observable, action, autorun } from 'mobx';\r\nimport { persist } from 'mobx-persist';\r\nimport AuthState from 'types/AuthState';\r\nimport User from 'types/User';\r\n\r\nexport const defaultAuthState = {\r\n  user: undefined,\r\n  token: '',\r\n};\r\nclass AuthStore {\r\n  @persist('object')\r\n  @observable\r\n  public authState: AuthState = defaultAuthState;\r\n\r\n  @action public setAuthState(newAuthState: AuthState): void {\r\n    this.authState = newAuthState;\r\n  }\r\n\r\n  @action public resetAuthState(): void {\r\n    this.authState = defaultAuthState;\r\n  }\r\n\r\n  @action public updateUser(user: User | undefined): void {\r\n    if (user) {\r\n      this.authState.user = user;\r\n    }\r\n  }\r\n\r\n  @action public initAuthStoreReset(remainingMilliseconds: number): void {\r\n    autorun(\r\n      () => {\r\n        this.resetAuthState();\r\n      },\r\n      { delay: remainingMilliseconds },\r\n    );\r\n  }\r\n}\r\nexport default AuthStore;\r\n","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\stores\\NotificationStore\\index.ts",["112"],"import { observable, action, autorun } from 'mobx';\r\nimport Notification from 'types/Notification';\r\n\r\nexport const defaultNotification: Notification = {\r\n  type: 'message',\r\n  content: '',\r\n};\r\n\r\nconst defaultWarning: Notification = {\r\n  type: 'warning',\r\n  content: 'Something went wrong, try again later.',\r\n};\r\n\r\nclass NotificationStore {\r\n  @observable public notification: Notification | undefined = undefined;\r\n\r\n  @action public setNotification(\r\n    notification: Notification = defaultWarning,\r\n  ): void {\r\n    this.notification = notification;\r\n    autorun(\r\n      () => {\r\n        this.resetNotification();\r\n      },\r\n      { delay: 4000 },\r\n    );\r\n  }\r\n\r\n  @action public resetNotification(): void {\r\n    this.notification = undefined;\r\n  }\r\n}\r\nexport default NotificationStore;\r\n","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\components\\Sidebar\\index.tsx",["113","114","115","116"],"C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\components\\Sidebar\\styled.ts",[],"C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\components\\Portal\\index.tsx",["117"],"import { FC } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport usePortal from 'hooks/usePortal/usePortal';\r\n\r\ninterface PortalProps {\r\n  portalId: string;\r\n  children: JSX.Element[] | JSX.Element;\r\n}\r\n\r\nconst Portal: FC<PortalProps> = ({ portalId, children }) => {\r\n  const target = usePortal(portalId);\r\n  return createPortal(children, target);\r\n};\r\n\r\nexport default Portal;\r\n","C:\\Users\\PC\\Desktop\\codetalker-podcasting\\packages\\browser\\src\\hooks\\usePortal\\usePortal.tsx",["118"],"import { useRef, useEffect, MutableRefObject } from 'react';\r\n\r\nexport const createRootElement = (id: string): HTMLDivElement => {\r\n  const rootContainer = document.createElement('div');\r\n  rootContainer.setAttribute('id', id);\r\n  return rootContainer;\r\n};\r\n\r\nexport const appendRootElement = (rootElement: HTMLDivElement): void => {\r\n  document.body.insertBefore(rootElement, document.body.firstChild);\r\n};\r\n\r\nexport const getRootElement = (\r\n  rootElementRef: MutableRefObject<HTMLDivElement | undefined>,\r\n) => {\r\n  if (!rootElementRef.current) {\r\n    rootElementRef.current = document.createElement('div');\r\n  }\r\n  return rootElementRef.current;\r\n};\r\nconst usePortal = (id: string) => {\r\n  const rootElementRef = useRef<HTMLDivElement>();\r\n  useEffect(() => {\r\n    const { current } = rootElementRef;\r\n    const existingParent = document.querySelector<HTMLDivElement>(`#${id}`);\r\n    const parentElement = existingParent || createRootElement(id);\r\n    if (!existingParent) {\r\n      appendRootElement(parentElement);\r\n    }\r\n    if (current) {\r\n      parentElement.appendChild(current);\r\n    }\r\n\r\n    return () => {\r\n      if (current) {\r\n        current.remove();\r\n      }\r\n      if (parentElement.childNodes.length === -1) {\r\n        parentElement.remove();\r\n      }\r\n    };\r\n  }, [id]);\r\n\r\n  return getRootElement(rootElementRef);\r\n};\r\n\r\nexport default usePortal;\r\n",{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":23},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":19},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":19},{"ruleId":"125","severity":1,"message":"130","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":34},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":19},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":19},{"ruleId":"125","severity":1,"message":"131","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":27},{"ruleId":"125","severity":1,"message":"132","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":13},{"ruleId":"125","severity":1,"message":"133","line":2,"column":22,"nodeType":"127","messageId":"128","endLine":2,"endColumn":28},{"ruleId":"125","severity":1,"message":"134","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":17},{"ruleId":"125","severity":1,"message":"135","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":12},{"ruleId":"125","severity":1,"message":"136","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":20},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":19},{"ruleId":"125","severity":1,"message":"137","line":1,"column":21,"nodeType":"127","messageId":"128","endLine":1,"endColumn":29},{"ruleId":"125","severity":1,"message":"134","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":17},{"ruleId":"125","severity":1,"message":"135","line":12,"column":8,"nodeType":"127","messageId":"128","endLine":12,"endColumn":12},{"ruleId":"125","severity":1,"message":"129","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":12},{"ruleId":"125","severity":1,"message":"138","line":1,"column":29,"nodeType":"127","messageId":"128","endLine":1,"endColumn":45},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"jsx-a11y/accessible-emoji",[],"@typescript-eslint/no-unused-vars","'ReportHandler' is defined but never used.","Identifier","unusedVar","'FC' is defined but never used.","'FunctionComponent' is defined but never used.","'faThermometerHalf' is defined but never used.","'css' is defined but never used.","'action' is defined but never used.","'AuthState' is defined but never used.","'User' is defined but never used.","'Notification' is defined but never used.","'useState' is defined but never used.","'MutableRefObject' is defined but never used.","no-global-assign","no-unsafe-negation"]